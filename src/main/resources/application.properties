spring.application.name=timeline

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

spring.webservices.path=/services

endpoints.shutdown.enabled=true
app.name=Timeline-backend
app.description=Timeline backend

mybatis.config-location=classpath:/mybatis-config.xml

spring.datasource.url=jdbc:postgresql://localhost:5432/timeline?charSet=utf-8
spring.datasource.username=spring
spring.datasource.password=spring
spring.datasource.driver-class-name=org.postgresql.Driver

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------

# FLYWAY (FlywayProperties)
#flyway.baseline-description= #
#flyway.baseline-version=1 # version to start migration
#flyway.baseline-on-migrate= #
#flyway.check-location=false # Check that migration scripts location exists.
#flyway.clean-on-validation-error= #
#flyway.enabled=true # Enable flyway.
#flyway.encoding=UTF-8 #
#flyway.ignore-failed-future-migration= #
#flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
#flyway.locations=classpath:db/migration # locations of migrations scripts
#flyway.out-of-order= #
#flyway.password= # JDBC password if you want Flyway to create its own DataSource
#flyway.placeholder-prefix= #
#flyway.placeholder-replacement= #
#flyway.placeholder-suffix= #
#flyway.placeholders.*= #
#flyway.schemas= # schemas to update
#flyway.sql-migration-prefix=V #
#flyway.sql-migration-separator= #
#flyway.sql-migration-suffix=.sql #
#flyway.table= #
#flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#flyway.user= # Login user of the database to migrate.
#flyway.validate-on-migrate= #

